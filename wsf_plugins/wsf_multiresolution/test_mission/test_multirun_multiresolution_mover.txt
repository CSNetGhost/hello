# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# Copyright (C) 2021 Stellar Science; U.S. Government has Unlimited Rights.
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

test_feature multiresolution

multiresolution_multirun_table
   model_list 
      test mover
   end_model_list
   default_fidelity 0.55 end_default_fidelity
   loop_after_table_end
   fidelity_table
      0.0
      0.49
      0.5
      1.0 
   end_fidelity_table
end_multiresolution_multirun_table

final_run_number 5

mover LOW_FIDELITY_MOVER WSF_AIR_MOVER
   update_interval 30 sec
end_mover

mover HIGH_FIDELITY_MOVER WSF_AIR_MOVER
   update_interval 0.25 sec
end_mover

platform_type SIMPLE_FIGHTER WSF_PLATFORM
   icon F-18  

   multiresolution_mover WSF_MULTIRESOLUTION_MOVER
     add model low_fidelity_mover 
        fidelity_range 0.0 0.5 
        mover LOW_FIDELITY_MOVER
        end_mover
     end_model
     model high_fidelity_mover 
        fidelity_range 0.5 1.0
        mover HIGH_FIDELITY_MOVER
        end_mover
     end_model
   end_multiresolution_mover
end_platform_type

platform test SIMPLE_FIGHTER
  multiresolution_mover
     common
       route
          position 0n 0e altitude 20000 ft heading 0 deg speed 400 kts
          position 0.1n 0e altitude 20000 ft
       end_route
     end_common
  end_multiresolution_mover
  on_initialize2
     WsfMover mover = PLATFORM.Mover();
     int runNumber = WsfSimulation.RunNumber();
     string expectedMover;
     if (runNumber == 1 || runNumber == 2 || runNumber == 5) {
        expectedMover = "LOW_FIDELITY_MOVER";
     } else if (runNumber == 3 || runNumber == 4) {
        expectedMover = "HIGH_FIDELITY_MOVER";
     }
     if(mover != NULL){
        if(mover.IsA_TypeOf(expectedMover)){
           writeln("-PASS-");
        } else {
           writeln("Wrong mover. Expected ", expectedMover, ", got ", mover.Type());
           writeln("-FAIL-");
        }
     } else {
        writeln("No mover");
        writeln("-FAIL-");
     }
  end_on_initialize2
end_platform

