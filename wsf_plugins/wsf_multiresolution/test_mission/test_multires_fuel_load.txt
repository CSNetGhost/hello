# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# Copyright (C) 2021 Stellar Science; U.S. Government has Unlimited Rights.
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

fuel LOW_FIDELITY_FUEL WSF_FUEL
   maximum_quantity 10000 kg
   consumption_rate 1 kg/sec
end_fuel

platform_type SIMPLE_FIGHTER WSF_PLATFORM
   multiresolution_fuel WSF_MULTIRESOLUTION_FUEL     
     model high_fidelity_fuel
        fidelity_range 0.5 1.0
        fuel HIGH_FIDELITY_FUEL
        end_fuel
     end_model
    
     add model low_fidelity_fuel
        fidelity_range 0.0 0.5 
        fuel LOW_FIDELITY_FUEL
        end_fuel
     end_model
     fidelity 0.25
   end_multiresolution_fuel
end_platform_type

# Tests deferred loading
fuel HIGH_FIDELITY_FUEL WSF_TABULAR_RATE_FUEL
   maximum_quantity 10000 kg
   reserve_quantity 1500  kg
   mode CONSTANT_MODE
 
   fuel_table
      mode CONSTANT_MODE
      constant 1.0 kg/s
   end_fuel_table
end_fuel

platform test SIMPLE_FIGHTER
  
  on_initialize2
    // Check that the correct fuel was loaded
    WsfFuel fuel = PLATFORM.Fuel();
    if(fuel != NULL){
      if(fuel->IsA_TypeOf("LOW_FIDELITY_FUEL")){
        writeln("-PASS-");
      } else {
        writeln("Wrong fuel. Expected LOW_FIDELITY_FUEL, got ", fuel->Type());
        writeln("-FAIL-");
      }
    } else {
      writeln("No fuel");
      writeln("-FAIL-");
    }
  end_on_initialize2
end_platform

platform test2 SIMPLE_FIGHTER
   multiresolution_fuel
      model low_fidelity_fuel 
         # Make out of range, but set as default so it still gets selected
         fidelity_range 0.3 0.5
         default
      end_model
   end_multiresolution_fuel

  on_initialize2
    // Check that the correct fuel was loaded
    WsfFuel fuel = PLATFORM.Fuel();
    if(fuel != NULL){
      if(fuel->IsA_TypeOf("LOW_FIDELITY_FUEL")){
        writeln("-PASS-");
      } else {
        writeln("Wrong fuel. Expected LOW_FIDELITY_FUEL, got ", fuel->Type());
        writeln("-FAIL-");
      }
    } else {
      writeln("No fuel");
      writeln("-FAIL-");
    }
  end_on_initialize2

end_platform

