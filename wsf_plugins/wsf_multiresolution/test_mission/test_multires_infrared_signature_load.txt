# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# Copyright (C) 2021 Stellar Science; U.S. Government has Unlimited Rights.
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

infrared_signature INFRARED_SIGNATURE_1
   constant  11 watts/steradian
end_infrared_signature

platform_type SIMPLE_FIGHTER WSF_PLATFORM
   icon F-18  

   multiresolution_infrared_signature WSF_MULTIRESOLUTION_INFRARED_SIGNATURE
     model high_fidelity_sig
        fidelity_range 0.5 1.0
        infrared_signature INFRARED_SIGNATURE_1
        end_infrared_signature
     end_model
    
     add model low_fidelity_sig
        fidelity_range 0.0 0.5 
        infrared_signature INFRARED_SIGNATURE_2
        end_infrared_signature
     end_model
   end_multiresolution_infrared_signature
end_platform_type

infrared_signature INFRARED_SIGNATURE_2
   constant  22 watts/steradian
end_infrared_signature

platform test SIMPLE_FIGHTER
  multiresolution_infrared_signature
     fidelity 0.25
  end_multiresolution_infrared_signature
  
  on_initialize2
     // Check that the correct signature was loaded by checking the signature's state
     double IRI = PLATFORM.InfraredRadiantIntensity(WsfGeoPoint.Construct(0.0, 0.0, 0.0), 1.0, "default");
     if(IRI == 22.0){
       writeln("-PASS-");
     } else {
       writeln("Wrong infrared_signature. Expected IRI 22, got ", IRI);
       writeln("-FAIL-");
     }
  end_on_initialize2
end_platform

platform test2 SIMPLE_FIGHTER
   multiresolution_infrared_signature
      fidelity 0.25
      model low_fidelity_sig # Implicit edit
         fidelity_range 0.3 0.5
      end_model
      edit model high_fidelity_sig # Explicit edit
         default
      end_model
   end_multiresolution_infrared_signature
   
   on_initialize2
      // Check that the correct signature was loaded by checking the signature's state
      double IRI = PLATFORM.InfraredRadiantIntensity(WsfGeoPoint.Construct(0.0, 0.0, 0.0), 1.0, "default");
      if(IRI == 11.0){
        writeln("-PASS-");
      } else {
        writeln("Wrong infrared_signature. Expected IRI 11, got ", IRI);
        writeln("-FAIL-");
      }
   end_on_initialize2
end_platform
