# ****************************************************************************
# CUI//REL TO USA ONLY
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************
include (GenerateExportHeader)
include(swdev_project)

FILE(GLOB_RECURSE SRCS *.?pp *.h)

wsf_grammar_file(SRCS "${CMAKE_CURRENT_SOURCE_DIR}/../grammar/wsf_uci.ag")

include_directories(${PROJECT_BINARY_DIR}/source)

add_library(${PROJECT_NAME} ${SRCS})
swdev_warning_level(${PROJECT_NAME})
generate_export_header(${PROJECT_NAME})
target_include_directories(${PROJECT_NAME} PUBLIC
                           "${CMAKE_CURRENT_SOURCE_DIR}"
                           "${PROJECT_BINARY_DIR}/source")
target_link_libraries(${PROJECT_NAME} ${WSF_LIBS} wsf_mil)
if (MSVC)
   # Suppress warning C5040: dynamic exception specifications are valid only in C++14 and earlier,
   # generated by `throw(uci::base::UCIException)` and `throw()` lines.
   target_compile_options(${PROJECT_NAME} PRIVATE -wd4251 -wd4286 -wd4275 -wd4290 -wd5040)
else()
   target_compile_options(${PROJECT_NAME} PRIVATE -Wno-deprecated)
endif()

if(WIN32)
   set(LIBS debug ${CMAKE_CURRENT_SOURCE_DIR}/../lib/asb-v141-x64-MDd.lib
            optimized ${CMAKE_CURRENT_SOURCE_DIR}/../lib/asb-v141-x64-MD.lib)
   set(REL_DLLS ${CMAKE_CURRENT_SOURCE_DIR}/../lib/asb-v141-x64-MD.dll)
   set(DBG_DLLS ${CMAKE_CURRENT_SOURCE_DIR}/../lib/asb-v141-x64-MDd.dll)

   #add_library(${PROJECT_NAME} ${LIBS})
   target_link_libraries(${PROJECT_NAME} ${LIBS})
   add_custom_command(TARGET ${PROJECT_NAME} COMMAND ${CMAKE_COMMAND} -E copy $<$<CONFIG:Debug>:${DBG_DLLS}> $<$<CONFIG:Release>:${REL_DLLS}> $<TARGET_FILE_DIR:${PROJECT_NAME}>)

   install(FILES ${REL_DLLS} DESTINATION ${INSTALL_DLL_PATH} CONFIGURATIONS Release RelWithDebInfo PERMISSIONS
           OWNER_READ OWNER_WRITE OWNER_EXECUTE
           GROUP_READ GROUP_EXECUTE
           WORLD_READ WORLD_EXECUTE COMPONENT Runtime)
   install(FILES ${DBG_DLLS} DESTINATION ${INSTALL_DLL_PATH} CONFIGURATIONS Debug PERMISSIONS
           OWNER_READ OWNER_WRITE OWNER_EXECUTE
           GROUP_READ GROUP_EXECUTE
           WORLD_READ WORLD_EXECUTE COMPONENT Runtime)
else(WIN32)
   set(LIBS ${CMAKE_CURRENT_SOURCE_DIR}/../lib/asb-RHEL7.2_gcc4.8.5.so)

   target_link_libraries(${PROJECT_NAME}
                           debug ${LIBS}
                           optimized ${LIBS}
                           )

   install(FILES ${LIBS} DESTINATION ${INSTALL_DLL_PATH} CONFIGURATIONS Release RelWithDebInfo PERMISSIONS
          OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE COMPONENT Runtime)
   install(FILES ${LIBS} DESTINATION ${INSTALL_DLL_PATH} CONFIGURATIONS Debug PERMISSIONS
          OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE COMPONENT Runtime)

endif(WIN32)

if(WSF_PLUGIN_BUILD)
   swdev_plugin_install(${PROJECT_NAME} wsf_plugins)
else()
   swdev_lib_install(${PROJECT_NAME})
endif()
