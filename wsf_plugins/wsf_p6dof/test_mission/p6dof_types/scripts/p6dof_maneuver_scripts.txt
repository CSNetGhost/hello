# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************
//*************************************************************
// This file is included to be included at the platform level.
// It will not execute if included at the global level.
//*************************************************************


script void RollToBankAngle(WsfPlatform aPlatform, double bankAngle_deg)
   WsfMover mover = aPlatform.Mover();
   if(mover.IsA_TypeOf("WSF_P6DOF_MOVER"))
   {
      WsfP6DOF_Mover p6dofMover = (WsfP6DOF_Mover)mover;
      p6dofMover.SetAutopilotRollAngle(bankAngle_deg);
   }
   else
   {
      writeln("--ERROR-- Not a P6DOF Mover.");
   }
end_script

script void SetRollRate(WsfPlatform aPlatform, double rollRate_dps)
   WsfMover mover = aPlatform.Mover();
   if(mover.IsA_TypeOf("WSF_P6DOF_MOVER"))
   {
      WsfP6DOF_Mover p6dofMover = (WsfP6DOF_Mover)mover;
      p6dofMover.SetAutopilotRollRate(rollRate_dps);
   }
   else
   {
      writeln("--ERROR-- Not a P6DOF Mover.");
   }
end_script

script void SetPitchGLoad(WsfPlatform aPlatform, double gLoad)
   WsfMover mover = aPlatform.Mover();
   if(mover.IsA_TypeOf("WSF_P6DOF_MOVER"))
   {
      WsfP6DOF_Mover p6dofMover = (WsfP6DOF_Mover)mover;
      p6dofMover.SetPitchGLoad(gLoad);
   }
   else
   {
      writeln("--ERROR-- Not a P6DOF Mover.");
   }
end_script

script void SetGamma(WsfPlatform aPlatform, double flightPathAngle_deg)
   WsfMover mover = aPlatform.Mover();
   if(mover.IsA_TypeOf("WSF_P6DOF_MOVER"))
   {
      WsfP6DOF_Mover p6dofMover = (WsfP6DOF_Mover)mover;
      p6dofMover.SetAutopilotFlightPathAngle(flightPathAngle_deg);
   }
   else
   {
      writeln("--ERROR-- Not a P6DOF Mover.");
   }
end_script

script void SetMaxBankAngle(WsfPlatform aPlatform, double bankAngle_deg)
   WsfMover mover = aPlatform.Mover();
   if(mover.IsA_TypeOf("WSF_P6DOF_MOVER"))
   {
      WsfP6DOF_Mover p6dofMover = (WsfP6DOF_Mover)mover;
      p6dofMover.SetBankAngleMax(bankAngle_deg);
   }
   else
   {
      writeln("--ERROR-- Not a P6DOF Mover.");
   }
end_script

script void SetMaxRollRate(WsfPlatform aPlatform, double rollRate_dps)
   WsfMover mover = aPlatform.Mover();
   if(mover.IsA_TypeOf("WSF_P6DOF_MOVER"))
   {
      WsfP6DOF_Mover p6dofMover = (WsfP6DOF_Mover)mover;
      p6dofMover.SetRollRateMax(rollRate_dps);
   }
   else
   {
      writeln("--ERROR-- Not a P6DOF Mover.");
   }
end_script

script void SetMaxGLoad(WsfPlatform aPlatform, double maxG)
   WsfMover mover = aPlatform.Mover();
   if(mover.IsA_TypeOf("WSF_P6DOF_MOVER"))
   {
      WsfP6DOF_Mover p6dofMover = (WsfP6DOF_Mover)mover;
      p6dofMover.SetPitchGLoadMax(maxG);
   }
   else
   {
      writeln("--ERROR-- Not a P6DOF Mover.");
   }
end_script

script void SetMinGLoad(WsfPlatform aPlatform, double minG)
   WsfMover mover = aPlatform.Mover();
   if(mover.IsA_TypeOf("WSF_P6DOF_MOVER"))
   {
      WsfP6DOF_Mover p6dofMover = (WsfP6DOF_Mover)mover;
      p6dofMover.SetPitchGLoadMin(minG);
   }
   else
   {
      writeln("--ERROR-- Not a P6DOF Mover.");
   }
end_script

script void SetFlightPathAngle(WsfPlatform aPlatform, double gamma_deg)
   WsfMover mover = aPlatform.Mover();
   if(mover.IsA_TypeOf("WSF_P6DOF_MOVER"))
   {
      WsfP6DOF_Mover p6dofMover = (WsfP6DOF_Mover)mover;
      p6dofMover.SetAutopilotFlightPathAngle(gamma_deg);
   }
   else
   {
      writeln("--ERROR-- Not a P6DOF Mover.");
   }
end_script




