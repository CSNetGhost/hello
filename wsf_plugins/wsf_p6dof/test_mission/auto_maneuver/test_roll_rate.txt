# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

include_once ../platforms/fa-lgt.txt
include_once ../scripts/utils.txt

end_time 50 s

platform TEST_AIRCRAFT FA-LGT
   side blue

   route
      position   21.325n   158.000w  altitude   20000.0 ft   speed  450.0 kts
      position   20.00n    157.98w   altitude   20000.0 ft   speed  450.0 kts
   end_route
   
   script_variables
      bool keepChecking = true;
      bool allPassed = true; 
   end_script_variables
   
   execute at_time 10 sec absolute
      WsfRollRateManeuver mvr = WsfRollRateManeuver.Construct(60.0);
      mvr.SetEntryConstraint(WsfManeuverConstraint.AT_RELATIVE_TIME(10.0));
      mvr.SetExitConstraint(WsfManeuverConstraint.AT_RELATIVE_TIME(3.0));
      
      WsfRollAngleManeuver flat = WsfRollAngleManeuver.Construct(0.0);
      flat.SetEntryConstraint(WsfManeuverConstraint.AT_ROLL_ANGLE(0.0));
      
      allPassed = ExpectDouble(mvr.GetRollRate(), 60.0, 0.1, "Rate should be 60") && allPassed;
      
      WsfManeuverSequence sqn = WsfManeuverSequence.Construct();
      sqn.Append(mvr);
      sqn.Append(flat);
      
      WsfP6DOF_Mover mov = (WsfP6DOF_Mover)PLATFORM.Mover();
      mov.ExecuteManeuverSequence(sqn);
   end_execute
   
   execute at_time 12 sec absolute
      allPassed = ExpectDouble(PLATFORM.OrientationNED().Z(), 0.00, 0.25, "Roll Should be Zero") && allPassed;
   end_execute
   
   execute at_time 19.9 sec absolute
      allPassed = ExpectDouble(PLATFORM.OrientationNED().Z(), 0.00, 0.25, "Roll Should be Zero") && allPassed;
   end_execute
   
   execute at_time 22 sec absolute
      if (PLATFORM.OrientationNED().Z() < 1.0)
      {
         writeln("-FAIL- Roll should have started. ", PLATFORM.OrientationNED().Z());
      }
   end_execute
   
   execute at_time 44 sec absolute
      allPassed = ExpectDouble(PLATFORM.OrientationNED().Z(), 0.0, 0.25, "Roll Should be 0") && allPassed;
   end_execute
   
   execute at_time 45 s absolute
      if (allPassed)
      {
         writeln("-PASS-");
      }
      else
      {
         writeln("-FAIL- One or more tests failed.");
      }   
   end_execute    
end_platform
