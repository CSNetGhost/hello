# ****************************************************************************
# CUI//REL TO USA ONLY
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

test_feature brawler

#
# Test the creation of a basic BRAWLER platform
#

file_path .
#file_path p6dof_data/

# Brings in the P6DOF configuration
#include_once P6DOF_Environment.txt
#include_once F104_Empty.txt

# Map P6DOF object and platform types
#p6dof_object_types               # P6DOF     # platform_type
#   map_p6dof_object_to_platform  F104_Empty  BRAWLER_AIRCRAFT
#end_p6dof_object_types

radar_signature BRAWLER_AIRCRAFT_RADAR_SIG
   constant 1.0 m^2
end_radar_signature

# A brawler agent must have the following defined:
# 1. A WSF_P6DOF_MOVER or WSF_BRAWLER_MOVER
# 2. A WSF_BRAWLER_PROCESSOR
# 3. A WSF_PERCEPTION_PROCESSOR
# 4. A WSF_THREAT_PROCESSOR
platform_type BRAWLER_AIRCRAFT WSF_PLATFORM
   icon F-18
   radar_signature BRAWLER_AIRCRAFT_RADAR_SIG
   
   #mover WSF_P6DOF_MOVER
   #   p6dof_object_type  F104_Empty
   #end_mover

   mover WSF_BRAWLER_MOVER
      aero_file ../data/ACFT_BD.FXW
   end_mover

 
   comm datalink WSF_COMM_TRANSCEIVER
      network_name blue_net
      internal_link task_mgr
      internal_link perception 
   end_comm

   processor track_mgr WSF_TRACK_PROCESSOR
      purge_interval  60 sec
   end_processor

   processor perception WSF_PERCEPTION_PROCESSOR
   end_processor

   processor task_mgr WSF_BRAWLER_PROCESSOR
      mind_file ../data/MIND.txt
   end_processor

   processor incoming_threats WSF_THREAT_PROCESSOR
   end_processor

end_platform_type

platform blue_1 BRAWLER_AIRCRAFT
   side blue
   
   heading 200 deg

   route
     position 00:00:00.00n 00:00:00.00w altitude 10000.00 ft
     speed 200 kts
     position 00:00:01.00n 00:00:00.00w altitude 10000.00 ft
   end_route
   
end_platform

execute at_time 1 sec absolute
   // Check for a valid platform.
   WsfPlatform p = WsfSimulation.FindPlatform("blue_1");
   if (p.IsValid())   writeln("-PASS- T=", TIME_NOW, " Added platform ", p);
   if (! p.IsValid()) writeln("-FAIL- T=", TIME_NOW, " Could not add platform of type ", p.Type());
end_execute

end_time 1 min

/*
event_output
   file STDOUT
   enable PLATFORM_ADDED
   enable PLATFORM_DELETED
end_event_output

dis_interface
   record replay.rep
   #mover_update_timer 1.0 sec
end_dis_interface
*/
