# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

include_once ../scripts/utils.txt

include_once ../platforms/fa-lgt.txt
platform_type SIMPLE FA-LGT_RB6
   side blue
   icon f-18
   update_interval 0.01 sec
   
   follow_vertical_track
end_platform_type

platform alpha SIMPLE
   route
      position 40:00:00.000n 90:00:00.000w
      altitude 6000 meters
      heading 90 deg
      speed 500 kts
   end_route
end_platform

six_dof_formation yankee
   lead six_dof_unit one
      member_platform alpha
   end_six_dof_unit
end_six_dof_formation

start_date jun 1 2018
start_time 12:00:00.000
end_time 20 min

script_variables 
   bool allPassed = true;
end_script_variables

execute at_time 1 min absolute
   WsfSixDOF_Formation yankeeOne = WsfSixDOF_FormationManager.GetFormation("yankee.one");
   WsfSixDOF_FormationManeuverLimitsCommand cmd = WsfSixDOF_FormationManeuverLimitsCommand.Construct();
   cmd.SetMaxBankAngle(40.0);
   yankeeOne.ExecuteCommand(cmd);
   
   WsfSixDOF_TurnToHeadingManeuver mvr = WsfSixDOF_TurnToHeadingManeuver.Construct(179.0);
   WsfRigidBodySixDOF_Mover mov = (WsfRigidBodySixDOF_Mover)yankeeOne.GetMemberPlatform().Mover();
   mov.ExecuteManeuver(mvr);
end_execute

execute at_time 2 min absolute
   WsfPlatform alpha = WsfSimulation.FindPlatform("alpha");
   Vec3 orient = alpha.OrientationNED();
   allPassed = ExpectDouble(orient.Z(), 40.0, 0.5, "Roll should be 40") && allPassed;
end_execute

execute at_time 3 min absolute
   WsfSixDOF_Formation yankeeOne = WsfSixDOF_FormationManager.GetFormation("yankee.one");
   WsfSixDOF_FormationManeuverLimitsCommand cmd = WsfSixDOF_FormationManeuverLimitsCommand.Construct();
   cmd.SetMaxBankAngle(30.0);
   cmd.SetMaxRollRate(2.0);
   allPassed = ExpectDouble(cmd.GetMaxBankAngle(), 30.0, 1.0e-3, "Max bank angle should be 30") && allPassed;
   allPassed = ExpectDouble(cmd.GetMaxRollRate(), 2.0, 1.0e-3, "Max roll rate should be 1.0") && allPassed;
   yankeeOne.ExecuteCommand(cmd);
   
   WsfSixDOF_TurnToHeadingManeuver mvr = WsfSixDOF_TurnToHeadingManeuver.Construct(1.0);
   WsfRigidBodySixDOF_Mover mov = (WsfRigidBodySixDOF_Mover)yankeeOne.GetMemberPlatform().Mover();
   mov.ExecuteManeuver(mvr);
end_execute

execute at_time 5 min absolute
   WsfPlatform alpha = WsfSimulation.FindPlatform("alpha");
   Vec3 orient = alpha.OrientationNED();
   allPassed = ExpectDouble(orient.Z(), -30.0, 0.5, "Roll angle should be -30.0") && allPassed;
end_execute

execute at_time 10 min absolute
   WsfPlatform alpha = WsfSimulation.FindPlatform("alpha");
   Vec3 orient = alpha.OrientationNED();
   allPassed = ExpectDouble(orient.X(), 1, 0.5, "Heading should be 1 deg.") && allPassed;
end_execute

execute at_time 11 min absolute
   if (allPassed)
   {
      writeln("-PASS-");
   } 
   else
   {
      writeln("-FAIL- One or more tests failed.");
   }    
end_execute