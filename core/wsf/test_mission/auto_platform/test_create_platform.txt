# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

platform_type AIRPLANE WSF_PLATFORM
   mover WSF_AIR_MOVER end_mover
   icon 787
end_platform_type

platform_type TRUCK WSF_PLATFORM
   mover WSF_GROUND_MOVER end_mover
   icon Pickup_Truck
end_platform_type

platform_type RADAR_SITE WSF_PLATFORM
   icon Ground_Radar
   sensor radar WSF_GEOMETRIC_SENSOR
      frame_time 10 sec
      maximum_range 200 nm
      reports_location
      on
   end_sensor
end_platform_type

execute at_time 1 sec absolute
   // Create a radar site.
   WsfPlatform p = WsfSimulation.CreatePlatform("RADAR_SITE");
   if (! p.IsValid()) { writeln("-FAIL- CreatePlatform RADAR_SITE"); }
   bool inputValid =
      p.ProcessInput("side red") &&
      p.ProcessInput("position 40n 89.5w heading 45 deg");
   WsfPlatform pa = WsfSimulation.AddPlatform(p, "radar_site_1");    // Use a specified name
   if (pa.IsValid())   { writeln("-PASS- T=", TIME_NOW, " Added platform ", pa); }
   if (! pa.IsValid()) { writeln("-FAIL- T=", TIME_NOW, " Could not add platform of type ", p.Type()); }

   // Add another building at another location, using the template created above
   inputValid = p.ProcessInput("position 40n 90.5w heading 315 deg") && inputValid;
   p.SetSide("blue");
   pa = WsfSimulation.AddPlatform(p, "radar_site_2");// Use a specified name
   pa.SetSide("red"); //This should not work
   if (pa.IsValid())   { writeln("-PASS- T=", TIME_NOW, " Added platform ", pa); }
   if (! pa.IsValid()) { writeln("-FAIL- T=", TIME_NOW, " Could not add platform of type ", p.Type()); }
   if (pa.Side() == "blue") { writeln("-PASS- T=", TIME_NOW, " Set Side works prior to Simulation.AddPlatform"); }
   else                     { writeln("-FAIL- T=", TIME_NOW, " Set Side should not work after Simulation.AddPlatform"); }

   // Add a truck. This example used the ProcessInput to create the route.
   p = WsfSimulation.CreatePlatform("TRUCK");
   if (! p.IsValid()) { writeln("-FAIL- CreatePlatform RADAR_SITE"); }
   inputValid = p.ProcessInput("side green") && inputValid;
   inputValid = p.ProcessInput("route" +
                  "   position 39.5n 90w heading 0 deg speed 60 mph " +
                  "end_route") && inputValid;
   pa = WsfSimulation.AddPlatform(p, "");                            // Use a default generated name
   if (pa.IsValid())   { writeln("-PASS- T=", TIME_NOW, " Added platform ", pa); }
   if (! pa.IsValid()) { writeln("-FAIL- T=", TIME_NOW, " Could not add platform of type ", p.Type()); }

   // Add an airplane. This form creates a route object to define the route.
   p = WsfSimulation.CreatePlatform("AIRPLANE");
   if (! p.IsValid()) { writeln("-FAIL- CreatePlatform AIRPLANE"); }
   inputValid = p.ProcessInput("side blue") && inputValid;
   writeln("\nWarning and errors expected on next deferred input processing test");
   if (p.ProcessInput("use_route ROUTE_DOES_NOT_EXIST")) { writeln("-FAIL- use_route"); }  # Would cause a crash; expect to fail
   WsfRoute r = WsfRoute();
   WsfWaypoint w = WsfWaypoint();
   WsfGeoPoint g = WsfGeoPoint();
   g.Set(41.0, -90.0, 10000.0);
   w.SetLocation(g);
   w.SetSpeed(400.0);
   w.SetHeading(180.0);
   r.Append(w);
   p.SetRoute(r);
   pa = WsfSimulation.AddPlatform(p, "<default>");                   // Use a default generated name
   if (pa.IsValid())   { writeln("-PASS- T=", TIME_NOW, " Added platform ", pa); }
   if (! pa.IsValid()) { writeln("-FAIL- T=", TIME_NOW, " Could not add platform of type ", p.Type()); }
   if (! inputValid)   { writeln("-FAIL- one or more ProcessInput() returned false"); }
   
end_execute

end_time 2 sec

#event_output
#   file STDOUT
#   enable PLATFORM_ADDED
#   enable PLATFORM_DELETED
#end_event_output
#
#event_pipe
#   file replay.aer
#end_event_pipe
