# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

//! NOTE:
//! Both ring networks starts at platform 1 through all members to platform 5,
//! then 5 connects back to 1.
//! The standard ring network is bi-directional, so it can transmit "backwards" in
//! the ring, directly from 1 to 5, resulting in a 0.5 s delay with receipt at 2.5 s.
//! The directed ring only flows in a single direction, resulting in the message
//! having to pass through all members to arrive at platform five, with four jumps,
//! resulting in a 2.0 s delay with receipt at 4.0 s.

script_variables
   bool testPass = false;
end_script_variables

comm TEST_COMM WSF_COMM_TRANSCEIVER
   network_name network_ring
   transfer_rate 2048 bytes/s //! A 1 mb message takes 0.5 s per hop, assuming instantaneous propagation.
end_comm

processor MESSAGE_PROC WSF_SCRIPT_PROCESSOR
   on_message
      script
         writeln("MESSAGE RECEIVED ON: " + PLATFORM.Name());
         if((TIME_NOW < 2.49) || (TIME_NOW > 2.51))
         {
         }
         else
         {
            testPass = true;
         }
      end_script
   end_on_message
end_processor

network network_ring WSF_COMM_NETWORK_RING
   comm_list
      member test1 comm1
      member test2 comm1
      member test3 comm1
      member test4 comm1
      member test5 comm1
   end_comm_list
end_network

network network_ring_unused WSF_COMM_NETWORK_RING
end_network

platform_type TEST_PLAT WSF_PLATFORM
   add comm comm1 TEST_COMM
      internal_link proc1
   end_comm
   add processor proc1 MESSAGE_PROC
   end_processor
end_platform_type

platform test1 TEST_PLAT
end_platform

platform test2 TEST_PLAT
end_platform

platform test3 TEST_PLAT
end_platform

platform test4 TEST_PLAT
end_platform

platform test5 TEST_PLAT
end_platform

execute at_time 2 s absolute
   WsfMessage testMessage = WsfMessage();
   testMessage.SetType("TEST_MESSAGE");
   testMessage.SetSizeInBytes(1024);

   WsfPlatform sendPlat = WsfSimulation.FindPlatform("test1");
   WsfPlatform receivePlat = WsfSimulation.FindPlatform("test5");
   sendPlat.Comm("comm1").SendMessage(testMessage, receivePlat.Comm("comm1"));
end_execute

execute at_time 4.9 s absolute
   if(testPass)
   {
      writeln("-PASS-");
   }
   else
   {
      writeln("-FAIL-");
   }
end_execute

end_time 5 s

#event_output
#   enable all
#   file output.evt
#end_event_output



