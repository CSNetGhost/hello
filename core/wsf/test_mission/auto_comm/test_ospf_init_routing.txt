# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

//! Tests the baseline routing for OSPF.
//! With links already defined by the default
//! network membership, OSPF should route
//! messages successfully between members, and
//! connected outside non-OSPF members.

script_variables
   int num_message = 0;
end_script_variables


router DEFAULT WSF_COMM_ROUTER 
   use_default_protocol false
   add router_protocol ospf WSF_COMM_ROUTER_PROTOCOL_OSPF
   end_router_protocol 
end_router

comm test_comm WSF_COMM_TRANSCEIVER
   add protocol multicast WSF_COMM_PROTOCOL_IGMP end_protocol
end_comm

comm outside_comm WSF_COMM_TRANSCEIVER
end_comm

processor print WSF_SCRIPT_PROCESSOR
   on_message type TEST_MESSAGE
      script
         writeln("Received Message...");
         num_message = (num_message + 1);
      end_script
   end_on_message
end_processor

platform_type test_platform WSF_PLATFORM
   add processor proc_print print
   end_processor
   add comm test test_comm
      internal_link proc_print
   end_comm
   add router default DEFAULT end_router
end_platform_type

platform_type test_outside_platform WSF_PLATFORM
   add processor proc_print print
   end_processor
   add comm test outside_comm
      internal_link proc_print
   end_comm
end_platform_type

platform test1 test_platform
   edit router default
      edit router_protocol ospf
         ospf_area 1.1.1.1/32
         backbone 1.1.1.1/32
      end_router_protocol
   end_router
end_platform

platform test2 test_platform
   edit router default
      edit router_protocol ospf
         ospf_area 1.1.1.1/32
      end_router_protocol
   end_router
end_platform

platform test3 test_platform
   edit comm test
      link test12 test
   end_comm
   edit router default
      // We use test3 as an ASBR for external routing, since it has the availability of other routing protocols
      // (in this case, the legacy AFSIM routing protocol)
      use_default_protocol true
      edit router_protocol ospf
         ospf_area 1.1.1.1/32
      end_router_protocol
   end_router   
end_platform

platform test4 test_platform
   edit router default
      edit router_protocol ospf
         ospf_area 1.1.1.1/32
      end_router_protocol
   end_router
end_platform

platform test5 test_platform
   edit router default
      edit router_protocol ospf
         ospf_area 1.1.1.1/32
         ospf_area 1.1.1.2/32
      end_router_protocol
   end_router
end_platform

platform test8 test_platform
   edit router default
      edit router_protocol ospf
         ospf_area 1.1.1.2/32
      end_router_protocol
   end_router
end_platform

platform test9 test_platform
   edit router default
      edit router_protocol ospf
         ospf_area 1.1.1.5/32
         ospf_area 1.1.1.1/32
      end_router_protocol
   end_router
end_platform

platform test10 test_platform
   edit router default
      edit router_protocol ospf
         ospf_area 1.1.1.5/32
      end_router_protocol
   end_router
end_platform

platform test6 test_platform
   edit router default
      edit router_protocol ospf
         ospf_area 1.1.1.3/32
         ospf_area 1.1.1.4/32
      end_router_protocol
   end_router
end_platform

platform test7 test_platform
   edit router default
      edit router_protocol ospf
         ospf_area 1.1.1.4/32
         backbone 1.1.1.4/32
      end_router_protocol
   end_router
end_platform

platform test11 test_outside_platform
   edit comm test
      network_name notConnectedToOSPF
   end_comm
end_platform

platform test12 test_outside_platform
   edit comm test
      network_name connectedToOSPF
   end_comm
end_platform

execute at_time 1 s absolute
   WsfMessage msg = {};
   msg.SetType("TEST_MESSAGE");

   //! Send within the same area (backbone)
   WsfSimulation.FindPlatform("test1").Comm("test").SendMessage(msg, "test2", "test");
   
   // Generate new message for unique data tag for debugging.
   msg = {};
   msg.SetType("TEST_MESSAGE");

   //! Send within the same area (non-backbone)
   WsfSimulation.FindPlatform("test8").Comm("test").SendMessage(msg, "test5", "test");
   
   msg = {};
   msg.SetType("TEST_MESSAGE");

   //! Send from non-backbone area to backbone area.
   WsfSimulation.FindPlatform("test8").Comm("test").SendMessage(msg, "test1", "test");
   
   msg = {};
   msg.SetType("TEST_MESSAGE");

   //! Send from backbone area to non-backbone area.
   WsfSimulation.FindPlatform("test4").Comm("test").SendMessage(msg, "test8", "test");
   
   msg = {};
   msg.SetType("TEST_MESSAGE");

   //! Send from non-backbone area to non-backbone area (via backbone)
   WsfSimulation.FindPlatform("test8").Comm("test").SendMessage(msg, "test10", "test");
   
   msg = {};
   msg.SetType("TEST_MESSAGE");

   //! Send to external non-ospf member, non connected (failure)
    WsfSimulation.FindPlatform("test1").Comm("test").SendMessage(msg, "test11", "test");
    
   msg = {};
   msg.SetType("TEST_MESSAGE");

   //! Send to external non-ospf member, connected locally (success)
   WsfSimulation.FindPlatform("test3").Comm("test").SendMessage(msg, "test12", "test");
   
   msg = {};
   msg.SetType("TEST_MESSAGE");

   //! Send to external non-ospf member, connected via remote area (success)
   // test8 (non-backbone) -> test5 (ABR,backbone) -> test3 (backbone, ASBR) -> test12
   WsfSimulation.FindPlatform("test8").Comm("test").SendMessage(msg, "test12", "test");

end_execute

script void SimulationComplete()
   if (num_message != 7)
   {
      writeln("MESSAGES RECEIVED: " + (string)num_message);
      writeln("-FAIL-");
   }
end_script

observer
   enable SIMULATION_COMPLETE SimulationComplete
end_observer

#event_output
#   enable all
#   file replay.evt
#end_event_output