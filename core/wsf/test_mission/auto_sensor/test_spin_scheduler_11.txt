# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

# Test edge cases near poles and IDL

include_once ../auto_script/test_functions.txt

radar_signature sig WSF_RADAR_SIGNATURE 
   constant 1 m^2
end_radar_signature
platform_type TARGET WSF_PLATFORM
   radar_signature sig
end_platform_type

observer 
   enable SENSOR_DETECTION_ATTEMPT
   enable SIMULATION_COMPLETE 
end_observer

script_variables 
   Array<int> encounter_order = {};
end_script_variables

script void SensorDetectionAttempt(WsfPlatform aPlatform, WsfSensor aSensor, WsfPlatform aTarget, WsfSensorInteraction aResult)
   encounter_order.PushBack(aTarget.Index());
end_script

script void SimulationComplete()
   int previous = 0;
   bool pass = true;
   //check that targets are being encountered in-order
   pass = pass && Math.Mod(encounter_order[0]+1, 6) == Math.Mod(encounter_order[1], 6);
   pass = pass && Math.Mod(encounter_order[1]+2, 6) == Math.Mod(encounter_order[2], 6); //three is skipped here
   pass = pass && Math.Mod(encounter_order[2]+1, 6) == Math.Mod(encounter_order[3], 6);
   pass = pass && Math.Mod(encounter_order[3]+1, 6) == Math.Mod(encounter_order[4], 6);
   pass = pass && Math.Mod(encounter_order[4]+1, 6) == Math.Mod(encounter_order[5], 6);
   pass = pass && Math.Mod(encounter_order[5]+1, 6) == Math.Mod(encounter_order[6], 6);
   pass = pass && Math.Mod(encounter_order[6]+2, 6) == Math.Mod(encounter_order[7], 6); //three is skipped here
   
   //check that the first detection on three happens at the correct time
   for (int i = 0; i < encounter_order.Size(); i += 1)
   {
      if (encounter_order[i] == 3)
      {
         pass = pass && encounter_order[i-1] == 2;
         
         //lastly, ensure this doesn't upset future detection ordering: 
         while (encounter_order[i] == 3)
         {
            i = i+1;
         }
         pass == pass && encounter_order[i] == 4;
         break;
      }
   }
   AssertTrueMessage(pass, "Spin scheduler polar detection order incorrect");
end_script

platform two TARGET
   position 89:40:08.25n 150:07:16.01w
   altitude 1 km
   heading 0 degrees
end_platform

platform four TARGET
   position 89:38:55.28n 145:10:05.65e
   altitude 1 km
   heading 8.53774e-07 degrees
end_platform

platform six TARGET
   add mover WSF_AIR_MOVER
   end_mover
   route
      position 89:09:39.040n 92:01:36.180e
         altitude 3280.84 ft agl
         speed 600 mi/h 
      position 89:53:55.240n 00:15:20.130w
         stop 
      label 2
         position 89:49:00.581n 114:32:34.380w 
      label 3
         position 89:28:34.113n 116:29:12.305w 
      label 4
         position 89:27:45.552n 68:49:35.654w 
      label 5
         position 89:27:43.367n 01:37:40.046w
         stop  
 
   end_route
end_platform

platform eight TARGET
   position 89:40:20.02n 38:32:54.28e
   altitude 1 km
   heading -8.53774e-07 degrees
end_platform

platform ten TARGET
   position 89:41:56.99n 22:17:39.06w
   altitude 1 km
   heading -8.53774e-07 degrees
end_platform

platform twelve TARGET
   position 89:43:31.52n 86:08:58.23w
   altitude 1 km
   heading -1.47878e-06 degrees
end_platform

platform plat WSF_PLATFORM
   position 89:58:32.60n 68:35:05.44e
   altitude 1 km
   add sensor sens WSF_RADAR_SENSOR
      on
      scheduler spin
         scan_period 30 sec
         starting_beam_azimuth 0 deg
         clockwise true
      end_scheduler
      maximum_range 54 km

      transmitter 
         power 10 gw
         frequency 10 ghz
         bandwidth 10 mhz
      end_transmitter
      receiver   
         frequency 10 ghz
         bandwidth 10 mhz
      end_receiver
      update_interval 1 sec
      frame_time 20 sec
      reports_location
      reports_velocity
   end_sensor
end_platform

end_time 5 min
