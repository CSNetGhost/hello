# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

// Test FollowRoute followed by a GoToClosestPoint
//
// Start on route1
// GoToClosestPoint   - Sets heading toward the second waypoint of route2
//
// Therefore the first waypoint of route2 should not be achieved
//
//////////////////////////////////////////

end_time 15 s

route route1
   position 29:59:50n 90w speed 50 mph
   position 30n 90w speed 50 mph
   position 30n 90:00:05w speed 50 mph
      label start
   position 30n 90:00:07w speed 50 mph
   position 30n 90:00:10w speed 50 mph
      execute end_route1
end_route

route route2
   position 30:00:10n 90:00:19w speed 50 mph
      execute fail_script
   position 30:00:02n 90:00:19w speed 50 mph
      execute pass_script
end_route

platform test_plat WSF_PLATFORM
   add mover WSF_GROUND_MOVER
      start_at start
      update_interval 1 s // otherwise mover never updates
   end_mover
   use_route route1
   script_variables
      double endRouteTime;
   end_script_variables
   script void end_route1()
      endRouteTime = TIME_NOW;
      writeln(TIME_NOW, " Follow route2");
      PLATFORM.FollowRoute("route2", "CLOSEST_POINT");
   end_script
   script_variables
      bool passFailScript = true;
      bool passPassScript = false;
   end_script_variables
   script void fail_script()
      // Should not be called
      writeln(TIME_NOW, " incorrectly passed first waypoint of second route");
      passFailScript = false;
   end_script
   script void pass_script()
      // Should be called only once
      static bool hasBeenCalled = false;
      writeln(TIME_NOW, " pass_script");
      passPassScript = !hasBeenCalled && (TIME_NOW > endRouteTime);
      hasBeenCalled = true;
   end_script
   script void temp()
      writeln(TIME_NOW, " temp");
   end_script
   script void on_platform_deleted()
      if (passFailScript && passPassScript)
      {
         writeln("-PASS-");
      }
      else
      {
         writeln("-FAIL-");
      }
   end_script
end_platform

