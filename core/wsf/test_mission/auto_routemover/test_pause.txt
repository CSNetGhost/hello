# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

include ../auto_script/test_pass.txt
script_variables
   PassTestCount = 3;
end_script_variables

# Checks the timing on the mover.  The update rate of the platform should
# not affect the execution time of CheckTime().
platform plat WSF_PLATFORM
   add mover WSF_AIR_MOVER
   end_mover
   route
      position 0n 0e speed 100 m/s heading 0 deg
         pause_time 1.3 s
      turn_to_heading 0 deg
         time 1.4 s
         execute CheckTime
         # a turn of 0 degrees should finish immediately
      turn_to_heading 0 deg
         execute CheckTime
   end_route

   script void CheckTime()
      extern void pass();
      if (MATH.Fabs(TIME_NOW - 2.7) < .01)
      {
         pass();
      }
      else
      {
         writeln("-FAIL- T=", TIME_NOW);
      }
   end_script

end_platform

# Checks that when a mover is unpaused, it does not continue to the wrong waypoint
platform rectangle WSF_PLATFORM
   add mover WSF_GROUND_MOVER
   end_mover
   route
         label start
      position 5n 5e speed 1000 m/s
      position 6n 5e
      position 6n 6e
      position 5n 6e
         goto start
   end_route

   execute at_interval_of 30 s
      bool onRect = false;
      for (double a = -360; a < 360; a=a+90.0)
      {
         if (Math.Fabs(a-Heading()) < .5)
         {
            onRect = true;
         }
      }
      if (!onRect)
      {
         writeln("-FAIL- Mover not moving along rectangle.");
      }
      Pause(TIME_NOW + 15.0);
   end_execute
end_platform

platform end_of_path_test WSF_PLATFORM
   add mover WSF_AIR_MOVER
      at_end_of_path remove
   end_mover
   route
      position 5n 5e speed 1000 m/s
      heading 90 deg
   end_route
   execute at_time 1 s absolute
      TurnToHeading(0);
   end_execute
   execute at_time 15 s absolute
      Pause(1000000.0);
   end_execute
   execute at_time 18 s absolute
      Unpause();
   end_execute
   execute at_time 20 s absolute
      # Ensures the platform has not been removed, and is unpaused
      extern void pass();
      if (Speed() > 10)
         pass();
   end_execute
end_platform

end_time 20 min
