# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

script_variables
	int numMsgsRcvd = 0;
	int expectedResult = 1;
end_script_variables

script void MessageReceived(WsfComm aXmtr, WsfComm aRcvr, WsfMessage aMsg, WsfCommInteraction aResult)
	extern int numMsgsRcvd;

	if (aRcvr.Platform().Name() == "subordinate-1")
	{
		numMsgsRcvd = numMsgsRcvd + 1;
		writeln("Message received by Subordinate");
	}
	if(aRcvr.Platform().Name() == "commander-1")
	{
		numMsgsRcvd = numMsgsRcvd + 1;
		writeln("Message received by Commander");
	}
	if (numMsgsRcvd == 2)
	{
		writeln("All messages received");
	}
	else
	{
		writeln("Not all messages received");
	}

end_script

observer
	enable MESSAGE_RECEIVED
end_observer

comm Radio_A WSF_COMM_TRANSCEIVER
	on
	network_name network_a
end_comm

platform commander-1 WSF_PLATFORM
	add comm commander-talk Radio_A
	end_comm

	command_chain conversation self

	execute at_time 10 seconds absolute
		WsfMessage hello = WsfMessage();
		PLATFORM.Comm("commander-talk").SendMessageToSubordinates("conversation", hello);
	end_execute
end_platform

platform subordinate-1 WSF_PLATFORM
	commander commander-1
	add comm listener_on_a Radio_A
		internal_link router
	end_comm

	command_chain conversation commander-1

	add processor router WSF_LINKED_PROCESSOR
		external_link commander via listener_on_a to commander-talk
	end_processor
end_platform


execute at_time 20 seconds absolute
	extern int numMsgsRcvd;

	if (numMsgsRcvd != 2)
	{
		writeln("-FAIL-");
	}
	else
	{
		writeln("-PASS-");
	}
	WsfSimulation.Terminate();
end_execute

end_time 100 seconds