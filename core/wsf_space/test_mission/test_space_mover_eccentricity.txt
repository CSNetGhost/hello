# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

end_time 96 hours

script_variables
   double sEcc1 = 0.1;
   double sEcc2 = 0.2;
   double sTol = 0.001;
   int sNumCompleted = 0;
end_script_variables

platform test-eccentricity WSF_PLATFORM
   icon satellite
   side blue

   add mover WSF_SPACE_MOVER
      //position 0n 90w altitude 20000 km heading 90 degrees
      semi_major_axis 40000 km
      inclination 10 deg
      eccentricity 0.0
   end_mover

#   maneuvering simple
#   end_maneuvering
      maneuvering rocket
         debug
         stage  // breeze-M
            specific_impulse 328 seconds
            thrust 19620 newtons
            empty_mass 2.5 tons
            fuel_mass 19.9 tons
         end_stage
      end_maneuvering

      mission_sequence
         maneuver change_eccentricity
            eccentricity 0.1
            // no constraint due to initial circular orbit
         end_maneuver
#         maneuver change_eccentricity
#            eccentricity 0.2
#            execute_at orbit 0 periapsis
#            // no constraint due to initial circular orbit
#         end_maneuver
      end_mission_sequence

   execute at_time 14 hours absolute
      WsfSpaceMover mover = ((WsfSpaceMover)PLATFORM.Mover());
      WsfOrbitalManeuver maneuver = WsfChangeEccentricity.Construct(WsfOrbitalEventCondition.AT_PERIAPSIS(), sEcc2);
      bool result = mover.ExecuteManeuver(maneuver);
      if(result) {
         writeln("Change Eccentricity: true");
      } else {
         writeln("Change Eccentricity: false");
      }
   end_execute

end_platform

script void OrbitalManeuverInitiated(WsfPlatform        aPlatform,
                                     WsfSpaceMover      aSM,
                                     WsfOrbitalManeuver aManeuver)
   writeln(TIME_NOW / 60.0, "; begin ", aManeuver.ManeuverType());
end_script

script void OrbitalManeuverCompleted(WsfPlatform        aPlatform,
                                     WsfSpaceMover      aSM,
                                     WsfOrbitalManeuver aManeuver)
   writeln(TIME_NOW / 60.0, "; end ", aManeuver.ManeuverType());
   writeln(aSM.Eccentricity());
   double newEcc = aSM.Eccentricity();
   if (sNumCompleted == 0)
   {
      if ((newEcc < (sEcc1 - sTol)) || (newEcc > (sEcc1 + sTol)))
      {
         writeln("-FAIL-");
      }
   }
   else if (sNumCompleted == 2)
   {
      if ((newEcc < (sEcc2 - sTol)) || (newEcc > (sEcc2 + sTol)))
      {
         writeln("-FAIL-");
      }
   }
   sNumCompleted += 1;
end_script

script void SimulationComplete()
   if (sNumCompleted != 2)
   {
      writeln("-FAIL- ", sNumCompleted);
   }
end_script

observer
   enable ORBITAL_MANEUVER_INITIATED OrbitalManeuverInitiated
   enable ORBITAL_MANEUVER_COMPLETED OrbitalManeuverCompleted
   enable SIMULATION_COMPLETE
end_observer

#event_output
#   enable ORBITAL_MANEUVER_INITIATED
#   enable ORBITAL_MANEUVER_COMPLETED
#   file test_space_mover_eccentricity.evt
#end_event_output

#event_pipe
#   file test_space_mover_eccentricity.aer
#end_event_pipe

