# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

# Ensure the standard movers have a defined spatial domain, and that the default can be overriden.
# This is to ensure Issue #90 is addressed.
#
# This only tests those things that *SHOULD* have a default domain. Those that do not include:
#
# WSF_OFFSET_MOVER   inherits from the thing to which it attaches
# WSF_TSPI_MOVER     must be defined by the user because the route can be anywhere
#
# WSF_HYBRID_MOVER and WSF_FOLLOWER are not tested because they are being deprecated.

script void TestDomain(WsfPlatform aPlatform,
                       string      aExpectedDomain)
   if (aPlatform.SpatialDomain() != aExpectedDomain)
   {
      writeln("-FAIL- Platform: ", aPlatform.Name(), "; unexpected spatial domain: ", aPlatform.SpatialDomain(), ", expected: ", aExpectedDomain);
   }
end_script

platform norad WSF_PLATFORM
   add mover WSF_NORAD_SPACE_MOVER
      # An orbit MUST be defined in order to initialize.
      # This one is directly from the documentation.
      orbit
         1 00005U 58002B   09105.24506411  .00000084  00000-0  11810-3 0  4337
         2 00005 034.2551 191.5961 1850437 000.0334 000.0199 10.83999999762276
      end_orbit
   end_mover
   on_initialize2 TestDomain(PLATFORM, "space"); end_on_initialize2
end_platform

platform space WSF_PLATFORM
   add mover WSF_SPACE_MOVER
      # An orbit MUST be defined in order to initialize.
      # This one is directly from the documentation.
      orbit
         1 00005U 58002B   09105.24506411  .00000084  00000-0  11810-3 0  4337
         2 00005 034.2551 191.5961 1850437 000.0334 000.0199 10.83999999762276
      end_orbit
   end_mover
   on_initialize2 TestDomain(PLATFORM, "space"); end_on_initialize2
end_platform

# Make sure explicit spatial_domain command works

platform override_space WSF_PLATFORM
   spatial_domain space
   add mover WSF_AIR_MOVER end_mover
   on_initialize2 TestDomain(PLATFORM, "space"); end_on_initialize2
end_platform

end_time 1 sec

# Must set an epoch that is after the epoch in the TLE's in the space movers.
start_epoch 2009110.00


