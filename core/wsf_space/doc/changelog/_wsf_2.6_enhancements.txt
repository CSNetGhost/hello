.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

* Added commands :command:`WSF_SPACE_MOVER.orbit_color` and orbit_color_rgb (DEPRECATED in 2.7) to the :model:`WSF_SPACE_MOVER` and :model:`WSF_NORAD_SPACE_MOVER`. The script methods :method:`GetOrbitColor<WsfSpaceMover.GetOrbitColor>` and :method:`SetOrbitColor<WsfSpaceMover.SetOrbitColor>` were also added to the :class:`WsfSpaceMover`.
* Added the ability to specify the :command:`central body<orbital_propagator_commands.central_body>` and related ellipsoid model that defines the origin of the coordinate system used for orbital propagation. Depending on the mover type, propagation is also affected by the associated gravitational parameter. *(Issue #1863)*
* Added ability to create and manage constellations of space-domain platforms via script using the classes :class:`WsfConstellationMaker` and :class:`WsfConstellation`. *(Issue #1775)*
* Added the :model:`WSF_INTEGRATING_SPACE_MOVER`, which provides a flexible integrating propagator for space missions outside the immediate vicinity of the Earth. *(Issue #1814)*
* Added and exposed initial state accessors to :class:`WsfSpaceMover`. Includes: :method:`InitialPositionLLA()<WsfSpaceMover.InitialPositionLLA>`, :method:`InitialPositionECI()<WsfSpaceMover.InitialPositionECI>`, :method:`InitialPositionWCS()<WsfSpaceMover.InitialPositionWCS>`, :method:`InitialVelocityECI()<WsfSpaceMover.InitialVelocityECI>`, :method:`InitialVelocityWCS()<WsfSpaceMover.InitialVelocityWCS>`. *(Issue #1855)*
