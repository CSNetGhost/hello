.. ****************************************************************************
.. CUI
..
.. The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
..
.. The use, dissemination or disclosure of data in this file is subject to
.. limitation or restriction. See accompanying README and LICENSE for details.
.. ****************************************************************************

.. _antenna_pattern.esa_pattern:

Electronic Steered/Scanned Array (ESA) Pattern
**********************************************

.. parsed-literal::
 antenna_pattern *<pattern-name>*
    esa_pattern
       debug_
       element_spacing_x_ <length-value>
       element_spacing_y_ <length-value>
       length_x_ <length-value>
       length_y_ <length-value>
       number_elements_x_ *<integer-value>>*
       number_elements_y_ *<integer-value>>*

       amplitude_quantization_bits_ *<integer-value>>*
       phase_quantization_bits_ *<integer-value>>*
       failed_elements_ratio_ *[0.0 .. 1.0]*

       element_pattern_ <pattern-name>
       back_baffled_ <boolean-value>
       lattice_ <lattice-type>
       distribution_type_ <distribution-type> ...

       # `Common Commands`_

       minimum_gain_ <db-ratio-value>
       gain_adjustment_ <db-ratio-value>
       gain_adjustment_table_ ... end_gain_adjustment_table
 end_antenna_pattern

The electronic steered/scanned array antenna pattern generator is an MxN array defined in the x-y plane (x is in the
azimuth direction, y is in the elevation direction).

.. note::
   Beam steering loss is accounted for by default and can be modified by the input commands provided for
   in the :ref:`Antenna_commands` section.

.. note::
   This antenna pattern is generated by looping over all the elements to get each elements contribution
   and phasing information and then summed, causing it to have an N^2 computation time and may not be suited for
   applications where time is a critical component (e.g., real-time simulation application/exercise).

.. block:: antenna_pattern.esa_pattern

.. command:: debug

   Turn debug on.

   **Default:** false

.. command:: element_spacing_x <length-value>

   The horizontal element spacing for the array. Requires number_elements_x_ OR length_x_ to be defined.

.. command:: element_spacing_y <length-value>

   The vertical element spacing for the array. Requires number_elements_y_ OR length_y_ to be defined.

.. command:: length_x <length-value>

   The total horizontal array length. Requires number_elements_x_ OR element_spacing_x_ to be defined.

.. command:: length_y <length-value>

   The total vertical array length. Requires number_elements_y_ OR element_spacing_y_ to be defined.

.. command:: number_elements_x <integer-value>

   The number of individual elements in the horizontal direction of the array. Requires length_x_ OR element_spacing_x_ to be defined.

.. command:: number_elements_y <integer-value>

   The number of individual elements in the vertical direction of the array. Requires length_y_ OR element_spacing_y_ to be defined.

.. command:: amplitude_quantization_bits <integer-value>

   The number of bits used to quantize the amplitude response of each element in the array. The reference value is set to an amplitude of 1.

.. command:: phase_quantization_bits <integer-value>

   The number of bits used to quantize the phase response of each element in the array. The reference value is set to 2*pi radians (360 degrees).

.. command:: failed_elements_ratio <real-value>

   The ratio of failed elements in the array.

   .. note::
      Actual failed elements are randomly selected during simulation initialization for each pattern instance in the simulation and used throughout the simulation.

   **Default:** 0.0

.. command:: element_pattern <pattern-name>

   Specifies the element pattern, via an antenna_pattern name, for all elements in the array.

   .. note::
      The element pattern is expected to be relative to an isotropic element (i.e., dBi - normalized to 1.0 (0.0 dB).)

   .. note::
      It may be necessary to set the electronic_beam_steering_loss_exponent  to 0.0 in order to negate any effect this has on the off boresight gain if already accounted for in the element pattern.

   **Default:** isotropic element assumed

.. command:: back_baffled <boolean-value>

   Specifies whether the antenna elements are back baffled for azimuth angles outside [-90 90] degrees.

   .. note::
      If this value is set to true and the minimum_gain was specified it will be used for values outside [-90 90] degrees for the gain.

   .. note::
      If this value is set to true and the minimum_gain was not specified -300 dB will be used outside [-90 90] degrees for the gain.

   .. note::
      If this value is set to false the element gain will be used, 0.0 dB for isotropic and actual gain if element_pattern is specified for the gain.

   **Default:** true

.. command:: lattice <lattice-type>

   The lattice type to be used to define the element locations. Types are as as follows:

   * **rectangular** A rectangular lattice will be used with all elements inline in rows/columns.
   * **triangular** A triangular lattice will be used where the corresponding rows are offset by one half the 'element_spacing_x_'.

   **Default:** rectangular

.. command:: distribution_type <distribution-type>

   The weighting distribution to apply, available distributions are:

   * **uniform** Apply an uniform distribution among the array elements.
   * **taylor** Apply a Taylor distribution among the array elements.
      Additional required inputs:

      .. command:: sidelobe_level_x <db-ratio-value>

         The sideobe level in the x-direction of the array in the range of 15 dB to 55 dB.

      .. command:: sidelobe_level_y <db-ratio-value>

         The sideobe level in the y-direction of the array in the range of 15 dB to 55 dB.

      .. command:: n_bar_x <integer-value>

         The number of bars in the x-direction of the array in the range of [1, 2, ...].

      .. command:: n_bar_y <integer-value>

         The number of bars in the y-direction of the array in the range of [1, 2, ...].

         **Default:** uniform
