# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

infrared_signature SA_LAUNCHER_SYSTEM_INFRARED_SIGNATURE
   constant 1 watts/steradian
end_infrared_signature

optical_signature SA_LAUNCHER_SYSTEM_OPTICAL_SIGNATURE
   constant 1 m^2
end_optical_signature

radar_signature SA_LAUNCHER_SYSTEM_RADAR_SIGNATURE
   constant 1 m^2
end_radar_signature

weapon_effects SA_LAUNCHER_SYSTEM_WEAPON_EFFECTS WSF_GRADUATED_LETHALITY

   radius_and_pk  250.0 m 0.50 # All Platforms
   radius_and_pk   65.0 m 0.90 # All Platforms
   radius_and_pk   40.0 m 0.99 # All Platforms

end_weapon_effects

aero SA_LAUNCHER_SYSTEM_AERO WSF_AERO
   # Values estimated from Hoerner's Drag book
   cd_zero_subsonic    0.10
   cd_zero_supersonic  0.25
   mach_begin_cd_rise  0.95
   mach_end_cd_rise    1.30
   mach_max_supersonic 4.00
   reference_area      0.159 m2 # 0.45 m. body dia
   cl_max             10.0
   aspect_ratio       16.0 // 32.0 // AR = B^2/Sref assume span = 5Xdia
end_aero

mover SA_LAUNCHER_SYSTEM_MOVER WSF_GUIDED_MOVER
   initial_mass     1625.0 kg   # (Janes)
   thrust_duration    20.0 sec
   specific_impulse  250.0 sec  # Representative of solid rocket motor technology
   thrust          72000.0 nt   # Assume 3.5-G vertical acceleration at ignition
   aero             SA_LAUNCHER_SYSTEM_AERO
   update_interval     0.5 s
   thrust_delay        1.0 sec   # SA-10/20 are ejected from the canister, and ignite at 25m altitude.
end_mover

processor SA_LAUNCHER_SYSTEM_AUTOPILOT WSF_GUIDANCE_COMPUTER
   proportional_navigation_gain 10.0
   velocity_pursuit_gain         4.0
   g_bias                        1.2
   guidance_delay                4.0 sec
end_processor

processor SA_LAUNCHER_SYSTEM_FUSE WSF_AIR_TARGET_FUSE
   time_of_flight_to_arm            20.0 sec     // Don't arm during the boost phase
   max_time_of_flight_to_detonate  320.0 sec
   coast_time_on_loss_of_target      4.0 sec
end_processor

platform_type SA_LAUNCHER_SYSTEM_BASE WSF_PLATFORM
   icon SA-10_Missile
   infrared_signature SA_LAUNCHER_SYSTEM_INFRARED_SIGNATURE
   optical_signature  SA_LAUNCHER_SYSTEM_OPTICAL_SIGNATURE
   radar_signature    SA_LAUNCHER_SYSTEM_RADAR_SIGNATURE
   weapon_effects     SA_LAUNCHER_SYSTEM_WEAPON_EFFECTS

   mover SA_LAUNCHER_SYSTEM_MOVER end_mover
   processor autopilot SA_LAUNCHER_SYSTEM_AUTOPILOT end_processor
   processor fuse SA_LAUNCHER_SYSTEM_FUSE end_processor
end_platform_type

# LC computer truncated to only handle the test case
launch_computer SA_LAUNCHER_SYSTEM_LAUNCH_COMPUTER WSF_SAM_LAUNCH_COMPUTER
   # Created by SAMLaunchComputerGenerator on Wed Jul 25 11:14:34 2007
   maximum_delta_altitude 30000 m
   minimum_delta_altitude 300 m
   maximum_slant_range 136033 m
   minimum_slant_range 1000 m
   maximum_time_of_flight 319.45 sec
   debug
   intercept_envelope
      target_altitude 5000 m
         ground_range 16000 m   time_of_flight 32.5 sec
         ground_range 18000 m   time_of_flight 35.15 sec
      target_altitude 10000 m
         ground_range 16000 m   time_of_flight 35 sec
         ground_range 18000 m   time_of_flight 37.5 sec
   end_intercept_envelope
end_launch_computer

weapon SA_LAUNCHER_SYSTEM WSF_EXPLICIT_WEAPON

   launched_platform_type SA_LAUNCHER_SYSTEM_BASE  # (User will probably choose to override this type.)
   launch_computer        SA_LAUNCHER_SYSTEM_LAUNCH_COMPUTER end_launch_computer

   # Janes indicates the missile is ejected from the canister and ignites at 25 m altitude.
   launch_delta_v 22.4 0 0 m/s

   # The missiles are launched vertically from the canisters.
   # We can't specify 90 degrees because of a singularity
   tilt  89.9 degrees

   # The user should cue the weapon to the target track before launching.
   # This is a bit of a hack until the missile guidance computer will roll.
   slew_mode azimuth
   azimuth_slew_limits -180 deg 180 deg

   # Janes indicates there are 4 canisters per TEL
   quantity 4

   # Janes had no value here. Assume there is some reaction time.
   firing_delay   1.0 secs

   # Janes indicated the salvo interval for an SA-10 was 3-5 seconds
   salvo_interval uniform minimum 3.0 secs maximum 5.0 secs

end_weapon

weapon_effects SA_LAUNCHER_SYSTEM_LETHALITY WSF_GRADUATED_LETHALITY
   radius_and_pk 100 m 1.0

   script void on_weapon_target_engagement(WsfPlatform aTarget)
      writeln("T=", TIME_NOW, " Weapon Engagement");
      WsfPlatform weapon = WeaponPlatform();
      # Return immediately if no target or weapon platform
      if (! (aTarget.IsValid() && weapon.IsValid())) return;
      writeln("  Weapon: ", weapon.Name(), ", Target:", aTarget.Name());
      writeln("  Time launched: ", StartTime());
      writeln("  Miss Distance: ", MissDistance());
      
      string msg = "***** " + aTarget.Name() + " hit by weapon " + weapon.Name();
      aTarget.Comment(msg);
      msg = "***** " + weapon.Name() + " hit target " + aTarget.Name();
      weapon.Comment(msg);
   end_script

end_weapon_effects

platform_type SA_LAUNCHER_SYSTEM SA_LAUNCHER_SYSTEM_BASE
   weapon_effects_type SA_LAUNCHER_SYSTEM_LETHALITY
   processor seeker WSF_PERFECT_TRACKER
      update_interval 1.0 sec
   end_processor
end_platform_type

# Must have a standalone weapon for transfer of control testing...
# (See shooter-rtx.txt and target-rtx.txt)
weapon SA_LAUNCHER_SYSTEMX SA_LAUNCHER_SYSTEM
   launched_platform_type SA_LAUNCHER_SYSTEM
   quantity 1
end_weapon

platform_type SA_LAUNCHER_SYSTEM_LAUNCHER WSF_PLATFORM
   icon SA-10_LAUNCHER
   
   weapon sam SA_LAUNCHER_SYSTEMX
      quantity 2
   end_weapon
   
   sensor radar WSF_RADAR_SENSOR
      on
      frame_time 10 sec
      transmitter
         power 100 kw
         frequency 3 ghz
      end_transmitter
      one_m2_detect_range 200 nm
      reports_location
      reports_velocity
      reports_iff
      processor track-manager
   end_sensor

   execute at_time 5 s absolute 
      PLATFORM.Sensor("radar").TurnOff();   
   end_execute
   
   processor track-manager WSF_TRACK_PROCESSOR
   end_processor
   
   // Decides who to shoot at and when to shoot.
   processor thinker WSF_TASK_PROCESSOR

      script_variables
         double launchRange = 20000.0;
      end_script_variables
      
      show_state_transitions
      evaluation_interval DETECTED 1 sec
      state DETECTED
         next_state ENGAGED
            if (TRACK.IFF_Friend()) return false;
            return (PLATFORM.SlantRangeTo(TRACK) < launchRange);
         end_next_state
      end_state
      
      evaluation_interval ENGAGED 1 sec
      state ENGAGED
         next_state DETECTED
            WsfWeapon weapon = PLATFORM.Weapon("sam");
            if ((weapon.QuantityRemaining() > 0) &&
                (weapon.TimeSinceLastFired() > 500.0))
            {
               weapon.CueToTrack(TRACK);     // Not needed with SIMS/JAAM
               weapon.Fire(TRACK);
               weapon.ClearCueing();         // Not needed with SIMS/JAAM
            }
            return false;
         end_next_state
      end_state
   end_processor
end_platform_type

radar_signature F-18E_RADAR_SIG
   constant 1 m^2
end_radar_signature

infrared_signature F-18E_INFRARED_SIG
   constant 1000 w/sr
end_infrared_signature

optical_signature F-18E_OPTICAL_SIG
   constant 10 m^2
end_optical_signature

platform_type F-18E WSF_PLATFORM
   icon  F-18E
   radar_signature    F-18E_RADAR_SIG
   infrared_signature F-18E_INFRARED_SIG
   optical_signature  F-18E_OPTICAL_SIG
   mover WSF_AIR_MOVER end_mover
end_platform_type

platform sa_launcher_system_launcher_1 SA_LAUNCHER_SYSTEM_LAUNCHER
   side red
   position 36:30n 115w altitude 1 ft agl
end_platform

platform f-18e_1 F-18E
   side blue
   route
      position 36:41:00n 115:00:00w altitude 30000 ft msl
         speed 500 kts
         radial_acceleration 2.00 g
      position 36:30:00n 115:00:00w altitude 30000 ft msl
         speed 500 kts
         radial_acceleration 2.00 g
      position 36:41:00n 115:00:00w altitude 30000 ft msl
         speed 500 kts
         radial_acceleration 2.00 g
   end_route
end_platform

observer 
   enable WEAPON_HIT
   enable SIMULATION_COMPLETE
end_observer

script_variables 
   double gImpactTime = 0.0;
   double gTTI = 0.0;
   bool gWeaponHit = false;
   bool gTTI_Accurate = true;
end_script_variables

script void SimulationComplete()
   if (!gWeaponHit)
   {
      writeln("-FAIL-: Weapon should have hit the target.");
   }
   else if (!gTTI_Accurate)
   {
   }
   else
   {
      writeln("-PASS-");
   }  
end_script

script void WeaponHit(WsfWeaponEngagement aWeaponEngagement, WsfPlatform aTargetPlatform)
   double diff = MATH.Fabs(TIME_NOW - gImpactTime); 
   if (diff > 8.0)
   {
      gTTI_Accurate = false;
      writeln("-FAIL-: TTI not accurate enough.");
      writeln("   TIME_NOW:", TIME_NOW);
      writeln("   Computed TTI: ", gTTI);
      writeln("   Abs. difference: ", diff);
   }
   gWeaponHit = true;
end_script

execute at_time 10 s absolute
   WsfPlatform shooter = WsfSimulation.FindPlatform("sa_launcher_system_launcher_1");
   WsfLocalTrack lt = shooter.MasterTrackList().Entry(0); 
   gTTI = shooter.Weapon("sam").TimeToIntercept(lt);
   gImpactTime = gTTI + TIME_NOW;
end_execute
