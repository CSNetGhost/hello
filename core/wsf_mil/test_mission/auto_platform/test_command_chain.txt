# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

# Command chain test...

script_variables
   bool gPass = true;
end_script_variables

platform_type BASE_TYPE WSF_PLATFORM

   script void CheckPlatformList(WsfPlatformList aPlatformList,
                                 Array<string>   aExpectedList)
      extern bool gPass;

      Array<string> actualList = Array<string>();
      foreach (WsfPlatform actualPlatform in aPlatformList)
      {
         actualList.PushBack(actualPlatform.Name());

         bool found = false;
         foreach (string expectedName in aExpectedList)
         {
            if (expectedName == actualPlatform.Name())
            {
               found = true;
               break;
            }
         }
         if (! found)
         {
            writeln("-FAIL- ", Name(), " Actual platform ", actualPlatform.Name(),
                    " not in expected list ", aExpectedList);
            gPass = false;
         }
      }

      foreach (string expectedName in aExpectedList)
      {
         bool found = false;
         foreach (WsfPlatform actualPlatform in aPlatformList)
         {
            if (expectedName == actualPlatform.Name())
            {
               found = true;
               break;
            }
         }
         if (! found)
         {
            writeln("-FAIL- ", Name(), " Expected platform ", expectedName,
                    " not in actual list ", actualList);
            gPass = false;
         }
      }
   end_script

end_platform_type

# ------------------------------------------------------------------------------

platform_type COMMANDER BASE_TYPE

   script void on_subordinate_deleted(WsfPlatform aSubordinate)
      writeln("T=", TIME_NOW, " ", Name(), ": subordinate ", aSubordinate.Name(), " deleted");
   end_script

end_platform_type

# ------------------------------------------------------------------------------

platform_type SUBORDINATE BASE_TYPE

   script void on_commander_deleted(WsfPlatform aCommander)
      writeln("T=", TIME_NOW, " ", Name(), ": Commander ", aCommander.Name(), " deleted");
      WsfTaskManager task_mgr = (WsfTaskManager) Processor("task_mgr");
      task_mgr.ChangeOperatingLevel("ENGAGE", 1);
   end_script

   script void on_peer_deleted(WsfPlatform aPeer)
      writeln("T=", TIME_NOW, " ", Name(), ": Peer ", aPeer.Name(), " deleted");
   end_script

   processor task_mgr WSF_TASK_PROCESSOR
      script void on_operating_level_change(string aTaskType)
         writeln("T=", TIME_NOW, " ", PLATFORM.Name(), " operating level for ", aTaskType,
                 " changed to ", OperatingLevelFor(aTaskType));
      end_script
   end_processor

end_platform_type

# ------------------------------------------------------------------------------

platform CMDR-1 COMMANDER
   commander SELF
   execute at_time 4.5 sec  absolute CheckPlatformList(Subordinates(), { "SUB-11", "SUB-12", "SUB-13" }); end_execute
   execute at_time 10.0 sec absolute DeletePlatform(); end_execute
   execute at_time 5.5 sec  absolute CheckPlatformList(Subordinates(), { "SUB-11", "SUB-12" }); end_execute
   execute at_time 15.5 sec absolute CheckPlatformList(Subordinates(), { "SUB-11" }); end_execute
end_platform

platform SUB-11 SUBORDINATE
   commander CMDR-1
   execute at_time 4.5 sec absolute CheckPlatformList(Peers(), { "SUB-12", "SUB-13" }); end_execute
   execute at_time 5.5 sec absolute CheckPlatformList(Peers(), { "SUB-12" }); end_execute
end_platform

platform SUB-12 SUBORDINATE
   commander CMDR-1
   execute at_time 4.5  sec absolute CheckPlatformList(Peers(), { "SUB-11", "SUB-13" }); end_execute
   execute at_time 5.5  sec absolute CheckPlatformList(Peers(), { "SUB-11" }); end_execute
   execute at_time 15.0 sec absolute DeletePlatform(); end_execute
end_platform

platform SUB-13 SUBORDINATE
   commander CMDR-1
   execute at_time 4.5 sec absolute CheckPlatformList(Peers(), { "SUB-11", "SUB-12" }); end_execute
   execute at_time 5.0 sec absolute DeletePlatform(); end_execute
end_platform

platform CMDR-2 COMMANDER
   commander SELF
end_platform

# ------------------------------------------------------------------------------
# This chain isn't really necessary at the current time. It will eventually be
# used when the functions are used to dynamically alter the command chain.

/*

platform SUB-21 SUBORDINATE
   commander CMDR-2
   execute at_time 1 sec absolute DeletePlatform(); end_execute
end_platform

platform SUB-22 SUBORDINATE
   commander CMDR-2
   execute at_time 2 sec absolute DeletePlatform(); end_execute
end_platform

platform SUB-23 SUBORDINATE
   commander CMDR-2
   execute at_time 3 sec absolute DeletePlatform(); end_execute
end_platform

*/

execute at_time 29.0 secs absolute
   if (gPass) writeln("-PASS-");
end_execute

end_time 30 secs

