# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

define_path_variable CASE test_JTIDS_terminal_tsb

script_variables
   int numMsgsXmit = 0;
end_script_variables

script void MessageTransmitted(WsfComm aComm, WsfMessage aMsg)
   #writeln (numMsgsXmit, " ", TIME_NOW);
   
   bool passed = false;
   if      ((numMsgsXmit == 0) && (TIME_NOW == 96.1171875))  passed = true;
   else if ((numMsgsXmit == 1) && (TIME_NOW == 96.1406250))  passed = true;
   else if ((numMsgsXmit == 2) && (TIME_NOW == 192.1171875)) passed = true;
   else if ((numMsgsXmit == 3) && (TIME_NOW == 192.1406250)) passed = true;
   if (!passed) writeln("-FAIL");
   
   numMsgsXmit = numMsgsXmit + 1; 
  
end_script

observer
   enable MESSAGE_TRANSMITTED
end_observer

platform Talker WSF_PLATFORM
   command_chain TEST SELF
   position 38n 114w altitude 30 kft
    
   add comm talker WSF_JTIDS_TERMINAL
      #debug
      command_chain TEST TEST
      slots_per_set 4096
      slot_group TEST
         transmit_slot_block A-5-3
         #transmit_slot_block C-0-3
      end_slot_group
   end_comm
   
   execute at_time 12 seconds absolute
      WsfMessage hello = WsfMessage();
      hello.SetSizeInBits(210);
      PLATFORM.Comm("talker").SendMessageToSubordinates("TEST", hello);

      WsfMessage helloAgain = WsfMessage();
      helloAgain.SetSizeInBits(210);           
      PLATFORM.Comm("talker").SendMessageToSubordinates("TEST", helloAgain);
   end_execute
end_platform

platform Listener WSF_PLATFORM
   command_chain TEST Talker
   position 38n 114:10w altitude 30 kft 
   add comm listener_on_a WSF_JTIDS_TERMINAL
      #debug
      command_chain TEST TEST
      slots_per_set 4096
      slot_group TEST
         transmit_slot_block A-6-3
      end_slot_group
   end_comm
   
   execute at_time 12 seconds absolute
      WsfMessage hello = WsfMessage();
      hello.SetSizeInBits(210);
      PLATFORM.Comm("listener_on_a").SendMessageToCommander("TEST", hello);
      
      WsfMessage helloAgain = WsfMessage();
      helloAgain.SetSizeInBits(210);  
      PLATFORM.Comm("listener_on_a").SendMessageToCommander("TEST", helloAgain);
   end_execute
end_platform

#event_output  
#   file   $(CASE).evt
##   enable MESSAGE_DELIVERY_ATTEMPT
#   enable MESSAGE_DISCARDED
#   enable MESSAGE_QUEUED
#   enable MESSAGE_RECEIVED 
#   enable MESSAGE_TRANSMITTED
#   enable MESSAGE_UPDATED
#end_event_output

end_time 30 min
